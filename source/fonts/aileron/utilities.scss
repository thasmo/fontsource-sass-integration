@use 'sass:list';
@use 'sass:map';
@use 'sass:math';
@use 'sass:string';
@use 'sass:meta';

@use 'metadata';

$metadata: meta.module-variables(metadata) !default;

$name: map.get($metadata, name) !default;
$styles: map.get($metadata, defaults, style) !default;
$weights: map.get($metadata, defaults, weight) !default;
$widths: map.get($metadata, defaults, width) !default;
$subsets: all !default;
$axes: null !default;
$suffix: null !default;
$directory: '~@fontsource/#{map.get($metadata, identifier)}/files' !default;

$name-function: null !default;
$style-function: null !default;
$weight-function: null !default;
$width-function: null !default;
$variation-function: null !default;
$glyph-function: null !default;
$source-function: null !default;
$path-function: null !default;

@function face-name(
	$name: $name,
	$suffix: $suffix,
	$axis: null,
) {
	@return string.quote(#{$name if($axis, $suffix, null)});
}

@function face-style(
	$value,
	$axis: null,
	$axes: map.get($metadata, axes),
) {
	@if ($axis == all or $axis == slnt) and map.has-key($axes, slnt) {
		@return oblique map.get($axes, slnt, min) + deg map.get($axes, slnt, max) + deg;
	} @else if meta.type-of($axis) == map {
		@return oblique map.get($axis, min) + deg map.get($axis, max) + deg;
	} @else if $value {
		@return $value;
	}

	@return null;
}

@function face-weight(
	$value,
	$axis: null,
	$axes: map.get($metadata, axes),
) {
	@if ($axis == all or $axis == wght) and map.has-key($axes, wght) {
		@return map.get($axes, wght, min) map.get($axes, wght, max);
	} @else if meta.type-of($axis) == map {
		@return map.get($axis, min) map.get($axis, max);
	} @else if $value {
		@return $value;
	}

	@return null;
}

@function face-width(
	$value,
	$axis: null,
	$axes: map.get($metadata, axes),
) {
	@if ($axis == all or $axis == wdth) and map.has-key($axes, wdth) {
		@return math.percentage(math.div(map.get($axes, wdth, min), 100)) math.percentage(math.div(map.get($axes, wdth, max), 100));
	} @else if meta.type-of($axis) == map {
		@return math.percentage(math.div(map.get($axis, min), 100)) math.percentage(math.div(map.get($axis, wdth, max), 100));
	} @else if $value {
		@return $value;
	}

	@return null;
}

@function face-variation(
	$value,
	$axis: null,
	$axes: map.get($metadata, axes),
) {
	@if ($axis == all or $axis == ital) and map.has-key($axes, ital) {
		@return 'ital' 1;
	} @else if meta.type-of($axis) == map {
		@return 'ital' map.get($axis, max);
	} @else if $value {
		@return $value;
	}

	@return null;
}

@function face-glyphs(
	$subset,
	$subsets: map.get($metadata, subsets),
) {
	@if meta.type-of($subset) == map {
		@return $subset;
	} @else if map.has-key($subsets, $subset) {
		@return map.get($subsets, $subset);
	}

	@return null;
}

@function face-source(
	$axis: null,
	$subset: map.get($metadata, defaults, subset),
	$style: map.get($metadata, defaults, style),
	$weight: map.get($metadata, defaults, weight),
	$axes: map.get($metadata, axes),
	$path-function: $path-function,
) {
	$path-function: if($path-function, $path-function, meta.get-function('path'));

	@if (($axis == all and list.length(map.keys($axes)) > 0) or map.has-key($axes, $axis)) {
		@return
			url('#{meta.call($path-function, $axis: $axis, $style: $style, $subset: $subset, $format: woff2)}') format('woff2 supports variations'),
			url('#{meta.call($path-function, $axis: $axis, $style: $style, $subset: $subset, $format: woff2)}') format('woff2-variations');
	} @else {
		@return
			url('#{meta.call($path-function, $weight: $weight, $style: $style, $subset: $subset, $format: woff2)}') format('woff2'),
			url('#{meta.call($path-function, $weight: $weight, $style: $style, $subset: $subset, $format: woff)}') format('woff');
	}
}

@function path(
	$axis: null,
	$format: woff2,
	$weight: map.get($metadata, defaults, weight),
	$style: map.get($metadata, defaults, style),
	$subset: map.get($metadata, defaults, subset),
	$identifier: map.get($metadata, identifier),
	$directory: $directory,
) {
	@if $axis {
		@return '#{$directory}/#{$identifier}-#{$subset}-variable-#{if($axis == all, 'full', $axis + 'Only')}-#{$style}.#{$format}';
	} @else {
		@return '#{$directory}/#{$identifier}-#{$subset}-#{$weight}-#{$style}.#{$format}';
	}
}

@mixin faces(
	$name: $name,
	$styles: $styles,
	$weights: $weights,
	$widths: $widths,
	$subsets: $subsets,
	$axes: $axes,
	$suffix: $suffix,
	$metadata: $metadata,
	$name-function: $name-function,
	$style-function: $style-function,
	$weight-function: $weight-function,
	$width-function: $width-function,
	$variation-function: $variation-function,
	$glyph-function: $glyph-function,
	$source-function: $source-function,
) {
	$name-function: if($name-function, $name-function, meta.get-function('face-name'));
	$style-function: if($style-function, $style-function, meta.get-function('face-style'));
	$weight-function: if($weight-function, $weight-function, meta.get-function('face-weight'));
	$width-function: if($width-function, $width-function, meta.get-function('face-width'));
	$variation-function: if($variation-function, $variation-function, meta.get-function('face-variation'));
	$glyphs-function: if($glyph-function, $glyph-function, meta.get-function('face-glyphs'));
	$source-function: if($source-function, $source-function, meta.get-function('face-source'));

	@each $axis, $metrics in $axes {
		@each $style in if($axis, map.get($metadata, defaults, style), if($styles == all, map.get($metadata, styles), $styles)) {
			@each $weight in if($axis, map.get($metadata, defaults, weight), if($weights == all, map.get($metadata, weights), $weights)) {
				@each $width in if($axis, map.get($metadata, defaults, width), if($widths == all, map.get($metadata, widths), $widths)) {
					@each $subset, $glyphs in if($subsets == all, map.keys(map.get($metadata, subsets)), $subsets) {
						@each $glyphs in meta.call($glyphs-function, $subset: if($glyphs, $glyphs, $subset)) {
							$data: (
								arguments: (
									name: $name,
									styles: $styles,
									weights: $weights,
									widths: $widths,
									subsets: $subsets,
									axes: $axes,
									suffix: $suffix,
									metadata: $metadata,
								),
								values: (
									axis: $axis,
									metrics: $metrics,
									style: $style,
									weight: $weight,
									width: $width,
									subset: $subset,
									glyphs: $glyphs,
								),
								properties: (
									font-family: meta.call($name-function, $name: $name, $suffix: $suffix, $axis: $axis),
									font-style: meta.call($style-function, $value: $style, $axis: if($axis == slnt and $metrics, $metrics, $axis)),
									font-weight: meta.call($weight-function, $value: $weight, $axis: if($axis == slnt and $metrics, $metrics, $axis)),
									font-stretch: meta.call($width-function, $value: $width, $axis: if($axis == wdth and $metrics, $metrics, $axis)),
									font-variation-settings: meta.call($variation-function, $value: null, $axis: if($axis == ital and $metrics, $metrics, $axis)),
									src: meta.call($source-function, $axis: $axis, $subset: $subset, $style: $style, $weight: $weight),
									unicode-range: $glyphs,
								)
							);

							/* #{$name, $style, $weight, $width} (Subset: #{$subset}, Axis: #{$axis}) */
							@font-face {
								font-family: map.get($data, properties, font-family);
								font-style: map.get($data, properties, font-style);
								font-weight: map.get($data, properties, font-weight);
								font-stretch: map.get($data, properties, font-stretch);
								font-variation-settings: map.get($data, properties, font-variation-settings);

								@content($data);

								unicode-range: map.get($data, properties, unicode-range);

								src: map.get($data, properties, src);
							}
						}
					}
				}
			}
		}
	}
}
